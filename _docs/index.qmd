---
title: "Harmonium"
---

Harmonium is an audio interface inspired by Python's [librosa](https://github.com/librosa/librosa). \

# Basic usage

Load the library
```r
library(harmonium)
```

Create an `HArray` from an existing array
```r
arr = matrix(c(1,2,3,4,5,6,7,8,9,10,11,12), ncol = 2)
dtype = HDataType$float64
harray = HArray$new_from_values(arr, dtype = dtype)
print(harray)
```

Or decode from an existing audio file
```r
l = HFile$decode("file.wav", dtype)
harray = l[[0]]
sr = l[[1]] # sampling rate
print(harray)
```

Verify the dimensions
```r
harray$len()
HAudioOp$nchannels(harray)
HAudioOp$nframes(harray)
```

Verify the data type
```r
harray$dtype()
```

Convert to an R array
```r
harray$collect()
```

Convert to mono
```r
HAudioOp$to_mono(harray)
```

Resample the haudio
```r
sr_in = 48000L
sr_out = 22050L
nbr_channels = HAudioOp$nchannels(harray)
dtype = HDataType$float64
res_type = HResamplerType$fft_fixed_in
resampler = HResampler$new_fft(sr_in, sr_out, nbr_channels, res_type)
hresampler$process(harray)
```

Play the haudio
```r
haudiosink = HAudioSink$new()
haudiosink$append_from_harray(harray)
```

Or play directly from the file
```r
haudiosink$append_from_file("file.wav")
```

Get the number of audios to be played
```r
haudiosink$len()
```

Double the audio volume and the playback speed
```r
haudiosink$set_volume(2)
haudiosink$set_speed(2)
```

Pause the playback and confirms it is paused
```r
haudiosink$pause()
haudiosink$is_paused()
```

It is also possible to get metadata from an audio file
```r
metatadatype = HMetadataType$text
HFile$metadata("file.wav", metatadatype)
```

And to get some audio parameters directly from a file
```r
params = HFile$params("file.wav")
sr = params[[1]]
nframes = params[[2]]
nchannels = params[[3]]
duration = params[[4]]
```
