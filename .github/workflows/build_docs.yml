name: Build docs

on:
  push:
    branches: [ main, master ]
    paths:
      - rdocs/**
  workflow_run:
    # This should be R-CMD-check but monorepo invalidates it.
    workflows: ["CI test and lint"]
    types:
      - completed
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions: write-all

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Set up Pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
            
      - name: build documentation
        run: |
          install.packages("remotes", repos = "https://cloud.r-project.org/")
          remotes::install_github("daniellga/rdocs", subdir = "rdocs")
          rdocs::generate_docs(files = list.files("./r-harmonium/src/rust/src/", full.names = TRUE), folder_name = "docs", gh_url = "https://github.com/daniellga/harmonium/tree/master/r-harmonium/src/rust/src/", run_examples = FALSE)
        shell: Rscript --vanilla {0}

      - name: Check for changes
        id: check_changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "CHANGES=true" >> "$GITHUB_OUTPUT";
          fi

      - name: Commit and push changes
        env:
          CHANGES: ${{ steps.check_changes.outputs.CHANGES }}
        if: env.CHANGES == 'true'
        run: |
          git config --global user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global user.name "${GITHUB_ACTOR}"

          git add .
          git commit -m "Update docs"
          git push origin master

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs/'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
