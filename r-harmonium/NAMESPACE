importFrom("utils", "packageVersion")
importFrom("utils", "browseURL")

export(HArray)
export(HDataType)
export(HAudioSink)
#export(HResampler)
export(HResamplerType)
export(HSincInterpolationParameters)
export(HPolynomialDegree)
export(HWindow)
export(HMetadataType)
#export(HFile)
export(HFft)
export(HAudioOp)
export(hdocs)
#export(HDecoderStream)

S3method("==",HArray)
S3method("==",HDataType)
S3method("==",HMetadataType)
S3method("==",HResamplerType)
S3method("==",HPolynomialDegree)
S3method("!=",HArray)
S3method("!=",HDataType)
S3method("!=",HMetadataType)
S3method("!=",HResamplerType)
S3method("!=",HPolynomialDegree)
S3method(print,HArray)
S3method(print,HDataType)
S3method(print,HMetadataType)
#S3method(print,HResampler)
S3method(print,HResamplerType)
S3method(print,HPolynomialDegree)
#S3method("$",HArray)
#S3method("$",HAudioSink)
#S3method("$",HDataType)
##S3method("$",HFile)
#S3method("$",HSincInterpolationParameters)
#S3method("$",HMetadataType)
##S3method("$",HResampler)
#S3method("$",HResamplerType)
#S3method("$",HWindow)
#S3method("$",HPolynomialDegree)
#S3method("$",HFft)
#S3method("$",HAudioOp)
##S3method("$",HDecoderStream)
#S3method("[[",HArray)
#S3method("[[",HAudioSink)
#S3method("[[",HDataType)
##S3method("[[",HFile)
#S3method("[[",HSincInterpolationParameters)
#S3method("[[",HMetadataType)
##S3method("[[",HResampler)
#S3method("[[",HResamplerType)
#S3method("[[",HWindow)
#S3method("[[",HPolynomialDegree)
#S3method("[[",HFft)
#S3method("[[",HAudioOp)
##S3method("[[",HDecoderStream)

useDynLib(harmonium, .registration = TRUE)
