TARGET_DIR = ./rust/target
LIBDIR = $(TARGET_DIR)/release
STATLIB = $(LIBDIR)/libharmonium.a
QUARTODIR = ./../docs
DOCSDIR = $(QUARTODIR)/docs
# Set library flags based on OS
PKG_LIBS = `os=\`uname -s\`; if [ "$$os" = "Linux" ]; then echo "-L${LIBDIR} -lharmonium -lasound"; else echo ="-L${LIBDIR} -lharmonium"; fi`

all: C_clean

$(SHLIB): $(STATLIB)

CARGOTMP = $(CURDIR)/.cargo

$(STATLIB):
	# In some environments, ~/.cargo/bin might not be included in PATH, so we need
	# to set it here to ensure cargo can be invoked. It is appended to PATH and
	# therefore is only used if cargo is absent from the user's PATH.
	if [ "$(NOT_CRAN)" != "true" ]; then \
		export CARGO_HOME=$(CARGOTMP); \
	fi && \
		export PATH="$(PATH):$(HOME)/.cargo/bin" && \
		cargo build --lib --release --manifest-path=./rust/Cargo.toml --target-dir $(TARGET_DIR) && \
		rm ./../docs/docs/* && \
		cargo run --bin r_docs --release --manifest-path=./rust/Cargo.toml --target-dir $(TARGET_DIR) -- --r_docs-dir $(DOCSDIR) && \
	if [ "$(NOT_CRAN)" != "true" ]; then \
		rm -rf $(CARGOTMP) && \
		rm -rf $(LIBDIR)/build; \
	fi

C_clean:
	rm -rf $(SHLIB) $(STATLIB) $(OBJECTS)

clean:
	rm -rf $(SHLIB) $(STATLIB) $(OBJECTS) rust/target
