---
title: HArray
---

An array representation.
Supports Float32, Float64, Complex32 and Complex64 types.
`new_from_values(robj: atomicvector, dtype: HDataType)`
Creates a new `HArray` from an R atomic vector.

# Arguments

* `robj` - A double or complex atomic vector.
* `dtype` - An `HDataType` to indicate which type of `HArray` to be created.
            For float dtypes, the atomic vector must be a double. For complex dtypes, a
            complex atomic vector.

# Returns

An `HArray` external pointer

# Examples

```
robj = c(1,2,3,4,5,6,7,8,9,10,11,12)
dtype = HDataType$float32
HArray$new_from_values(robj, dtype)
```

`new_from_values(robj: Array, dtype: HDataType)`
Creates a new `HArray` from an R's arrow `Array`.
The conversion is zero copy.

# Arguments

* `robj` - A float32 or float64 arrow `Array`.
* `dtype` - An `HDataType` to indicate which type of `HArray` to be created.

# Returns

An `HArray` external pointer

# Examples

```
robj = arrow::Array$create(1:10, type = float32())
dtype = HDataType$complex32
HArray$new_from_arrow(robj, dtype)
```

Returns the length of this Harray.
Sliced by an offset and length.
This operation is O(1).
Equality.
Not equality.
Compares underlying data with an HArray.
Compares underlying data with an HMatrix.
Compares underlying data with an HAudio.
Creates a new HArray, with the underlying data pointing to the same place in memory.
Converts to HMatrix. The new HMatrix Uses the same underlying data as the HArray.
Collect to an atomic vector.
The inner array's memory adress.
The inner array's data type.
Returns true if the inner Arc is shared.
Export the underlying array to Arrow C interface.